import { getAsArray } from "@mindful-web/object-path";
import defaultValue from "@mindful-web/marko-core/utils/default-value";
import convert from "@mindful-web/marko-web-native-x/utils/convert-ad-to-content";

$ const {
  config,
  name,
  aliases,
  sectionName,
} = input;
$ const indexes = defaultValue(input.indexes, [0]);
$ const nodes = getAsArray(input, "nodes");
$ const placement = config.getPlacement({ name, aliases });
$ const adsToRequest = indexes.length;
$ const { uri, id } = placement;
$ const opts = { ...placement.opts, n: adsToRequest };
$ let n = 0;

$ const injectAds = (nodes, ads) => nodes.map((node, i) => {
  const ad = ads[n];
  if (!indexes.includes(i) || !ad || !ad.hasCampaign) return node;
  n += 1;
  return { ...convert(ad, { sectionName }), attributes: ad.attributes };
});

<if(config && adsToRequest > 0 && uri && id)>
  <marko-web-native-x-fetch-elements|{ ads }| uri=uri id=id opts=opts>
    <${input.renderBody} nodes=injectAds(nodes, ads) />
  </marko-web-native-x-fetch-elements>
</if>
<else>
  <${input.renderBody} nodes=nodes />
</else>
