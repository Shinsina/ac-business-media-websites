import convert from "@mindful-web/marko-web-native-x/utils/convert-story-to-content";
import { getAsArray, getAsObject } from "@mindful-web/object-path";
import defaultValue from "@mindful-web/marko-core/utils/default-value";
import queryFragment from "../../../graphql/fragments/content-contact-us";

$ const { pagination: p, nativeX: nxConfig, site, GAM } = out.global;

$ const { id, alias, name, pageNode } = input;
$ const withNativeX = nxConfig && nxConfig.enabled ? defaultValue(input.withNativeX, true) : false;
$ const withAds = defaultValue(input.withAds, false);
$ const withFeedAds = defaultValue(input.withFeedAds, false);
$ const sections = getAsArray(input, "sections");
$ const perPage = 24;

<global-website-section-default-layout
  id=id
  alias=alias
  name=name
  page-node=pageNode
  with-ads=withAds
>
  <@head>
    <theme-section-feed-block|{ totalCount }| alias=alias count-only=true>
      <theme-pagination-controls
        per-page=perPage
        total-count=totalCount
        path=alias
        as-rels=true
      />
    </theme-section-feed-block>
  </@head>

  <@section|{ blockName, section, aliases }|>
    <theme-website-section-breadcrumbs
      section=section
      display-home=false
      display-self=false
      modifiers=["website-section"]
    />

    <if(input.beforeName)>
      <${input.beforeName}
        aliases=aliases
        block-name=blockName
        section=section
      />
    </if>

    <marko-web-website-section-name|{ value }| tag="h1" block-name=blockName obj=section>
      <if(p.page > 1)>$!{value}: Page ${p.page}</if>
      <else>$!{value}</else>
    </marko-web-website-section-name>

    <if(input.afterName)>
      <${input.afterName}
        aliases=aliases
        block-name=blockName
        section=section
      />
    </if>

    $ const pageDetails = site.getAsObject("pageDetails");
    <if(pageDetails[alias])>
      <global-page-details-block content=pageDetails[alias] />
    </if>
    <else>
      <marko-web-website-section-description obj=section />
    </else>
    <div class="row">
      <div class="col-lg-8">
        <marko-web-query|{ nodes }| name="website-scheduled-content" params={ sectionId: id, limit: 100, queryFragment }>
          <for|node| of=nodes>
            $ const primaryImage = getAsObject(node, "primaryImage");
            <marko-web-node image-position="left" flush-x=true>
              <@image
                src=primaryImage.src
                alt=primaryImage.alt
                fluid=false
                ar=null
                width=150
                link={ href: node.canonicalPath }
                use-placeholder=false
              />
              <@body>
                <@title tag="h5">
                  <marko-web-content-name tag=null obj=node link=true />
                </@title>
                <@text>
                  <default-theme-content-contact-details obj=node />
                </@text>
              </@body>
            </marko-web-node>
          </for>
        </marko-web-query>
      </div>
      <div class="col-lg-4">
        <contact-us-form config-name="notificationDefaults" title=site.get('contactUs.title') />
      </div>
    </div>
  </@section>

  <for|s| of=sections>
    <@section|{ blockName, section, aliases }| modifiers=s.modifiers>
      <${s.renderBody}
        block-name=blockName
        section=section
        aliases=aliases
      />
    </@section>
  </for>
</global-website-section-default-layout>
