import { getAsArray, getAsObject, get } from "@mindful-web/object-path";
import eventLinkAttrs from "@mindful-web/marko-web-p1-events/utils/link-attrs";
import eventEntity from "@mindful-web/marko-web-p1-events/utils/base-content-entity";
import queryFragment from "@mindful-web/marko-web-theme-monorail/graphql/fragments/content-list";
import { buildImgixUrl } from "@mindful-web/image";
import imageHeight from "@mindful-web/marko-web/components/node/utils/image-height";

$ const { id, type, pageNode, ...rest } = input;
$ const sections = getAsArray(input, "sections");
$ const { site, pagination: p, i18n } = out.global;
$ const leadersEnabled = site.get("leaders.enabled");
$ const perPage = 12;
$ const lang = site.config.lang || "en";

$ const displayInquiry = (content) => {
  if (site.get("inquiry.enabled") === false) return false;
  if (type === "company" && get(content, "enableRmi")) return true;
  if (type === "product" && get(content, "company.enableRmi")) return true;
  return false;
}

<global-content-wrapper-layout
  id=id
  type=type
  page-node=pageNode
  load-more=false
  scroll-depth-selector=".document-container .page .content-page-body"
  ...rest
>
  <@section|{ aliases, blockName, content }| modifiers=["content-header"]>
    $ const { primarySection } = content;
    <div>
      <div class="content-page-header  content-page-header--full-width">
        <theme-content-page-breadcrumbs section=primarySection />
        <div class="row">
          <div class="col-md-9 col-sm-12 col-lg-10">
            <div class="ldp">
              <div class="ldp__logo">
                <global-company-logo content=content />
              </div>
              <div class="ldp__title">
                <marko-web-content-name tag="h1" class="page-wrapper__title" obj=content />
                <marko-web-content-city-state-zip tag="p" class="text-small text-muted" obj=content />
              </div>
            </div>
          </div>
          <div class="col-md-3 col-lg-2 col-sm-12 justify-content-center d-flex flex-column px-3 py-3">
            <div class="ldp__social">
              <marko-web-leaders-company-website-link company=content lang=lang/>
              <div class="mt-2 d-flex justify-content-around">
                <for|item| of=content.socialLinks>
                  <marko-web-leaders-company-social-link company=content item=item />
                </for>
              </div>
            </div>
          </div>
        </div>
        <hr>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-8">
        <if(p.page === 1)>

          <div class="content-page-body">
            <marko-web-node-list collapsible=false class="mt-block">
              <@header>
                ${i18n("Company Overview")}
              </@header>
              <@body>
                <label class="content-section-header content-section-header--border">${i18n("Contact")}</label>
                $ const { socialLinks, website,  ...contentSansSocial } = content;
                <theme-content-contact-details
                  obj=contentSansSocial
                  website-link-attrs=eventLinkAttrs({
                    category: "Company Profile Page",
                    label: "Company Website",
                    entity: eventEntity(content.id, "company"),
                  })
                  lang=lang
                />

                <label class="content-section-header content-section-header--border">${i18n("About")} ${content.name}</label>
                <marko-web-content-body block-name=blockName obj=content />
                <if(input.topCompanyData)>
                  <marko-web-browser-component name="TopCompanyDetail" props=input.topCompanyData />
                </if>
              </@body>
            </marko-web-node-list>
          </div>
          <theme-sections-listed-in-block
            title="Categories Listed In"
            schedules=content.websiteSchedules
            root-alias="directory"
            full-name-find="Directory > "
            full-name-replace=""
          />

          $ const videos = getAsArray(content, "videos.edges").map(({ node }) => node);
          <marko-web-node-list class="mt-block">
            <@header>
              ${i18n("Featured Videos")}
            </@header>
            <@nodes|{ nodes }| nodes=videos>
              <theme-card-deck-flow cols=3 nodes=nodes modifiers=["featured-videos"]>
                <@slot|{ node, index }|>
                  <div class="node-list__node">
                    <theme-youtube-card-node
                      node=node
                      company-id=content.id
                      image-position="top"
                      link-attrs={
                        "data-company-id": content.id,
                        "data-company-name": content.name,
                      }
                    />
                  </div>
                </@slot>
              </theme-card-deck-flow>
            </@nodes>
            <@footer>
              $ const url = get(content, "youtube.url");
              <a href=url target="_blank" rel="noopener" class="btn btn-sm btn-block btn-secondary">
                ${i18n("View all videos")} &gt;
              </a>
            </@footer>
          </marko-web-node-list>

          <theme-latest-content-list-block
            query-name="all-company-content"
            query-params={ companyId: id, includeContentTypes: ["Article", "Blog", "News"], withSite: false, limit: 5 }
            title=`${i18n("Articles & News")}`
            with-native-x-section=false
            flush-x=false
            class="mt-block"
          >
            <@node with-dates=false />
          </theme-latest-content-list-block>

          <theme-latest-content-list-block
            query-name="all-company-content"
            query-params={ companyId: id, includeContentTypes: ["Product", "PressRelease"], withSite: false, limit: 5 }
            title=`${i18n("Products & Press Releases")}`
            with-native-x-section=false
            flush-x=false
            class="mt-block"
          >
            <@node with-dates=false />
          </theme-latest-content-list-block>

          <theme-latest-content-list-block
            query-name="all-company-content"
            query-params={ companyId: id, includeContentTypes: ["Video", "Whitepaper", "Webinar", "Document", "MediaGallery", "Podcast"], withSite: false, limit: 5 }
            title=`${i18n("Videos & Resources")}`
            with-native-x-section=false
            flush-x=false
            class="mt-block"
          >
            <@node with-dates=false />
          </theme-latest-content-list-block>

          <${input.afterBody}
            aliases=aliases
            block-name=blockName
            content=content
          />
        </if>
        <div class="content-page-latest-content">
          $ const latestTitle = (p.page > 1) ? `${i18n("More From")} ${content.name} - Page ${p.page}` : `${i18n("More From")} ${content.name}`;
          <!-- $ const params = {
            companyId: id,
            excludeContentTypes: ["Promotion"],
            limit: perPage,
            skip: p.skip({ perPage }),
            withSite: false,
            queryFragment,
          };
          <marko-web-query|{ nodes }| name="all-company-content" params=params>
            <theme-section-feed-flow nodes=nodes>
              <@header>${latestTitle}</@header>
              <@node-list inner-justified=false />
              <@node with-dates=false with-section=false />
            </theme-section-feed-flow>
          </marko-web-query> -->
          <theme-latest-content-list-block
            query-name="all-company-content"
            query-params={
              companyId: id,
              excludeContentTypes: ["Promotion"],
              limit: perPage,
              skip: p.skip({ perPage }),
              withSite: false,
            }
            title=latestTitle
            with-native-x-section=false
            flush-x=false
            class="mt-block"
          >
            <@node with-dates=false />
          </theme-latest-content-list-block>

          <theme-section-feed-block|{ totalCount }| query-name="all-company-content" count-only=true>
            <@query-params
              companyId=content.id
              requiresImage=true
              excludeContentTypes=["Promotion"]
            />
            <theme-pagination-controls
              per-page=perPage
              total-count=totalCount
              path=get(content, "siteContext.path")
            />
          </theme-section-feed-block>
        </div>
      </div>

      <div class="col-lg-4 pt-block">
        $ const inquiry = site.getAsObject('inquiry');
        <if(displayInquiry(content))>
          <div class="mb-block">
            <theme-company-inquiry-form-block modifiers=["flush-x"] content=content consent-checkboxes=getAsArray(site, 'config.inquiry.consentCheckboxes') />
          </div>
        </if>
        <else-if(withAds && !isSponsored)>
          <theme-gam-define-display-ad
            name="top-rotation"
            position="content_page"
            aliases=aliases
            modifiers=["max-width-300", "center", "margin-auto-x", "rail"]
            class="mb-0"
          />
        </else-if>
      </div>
    </div>
  </@section>
</global-content-wrapper-layout>
