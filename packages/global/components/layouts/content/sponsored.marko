import { getAsArray, get } from "@mindful-web/object-path";
import getContentPreview from "@mindful-web/marko-web-theme-monorail/utils/get-content-preview";
import contentIframe from "@ac-business-media/package-global/utils/content-iframe";

$ const { site, apollo, contentMeterState } = out.global;
$ const { id, type, pageNode, showReadNextBlock, showBottomAdBlock, ...rest } = input;
$ const sections = getAsArray(input, "sections");

$ const displayPrimaryImage = ["media-gallery"].includes(type) ? false : true;
$ const displayPublishedDate = ["company", "whitepaper"].includes(type) ? false : true;
$ const displaySocialShare = ["contact"].includes(type) ? false : true;
$ const displayCompany = ["press-release", "product"].includes(type);
$ const shouldInjectAds = false;

<global-content-wrapper-layout
  id=id
  type=type
  page-node=pageNode
  with-ads=input.withAds
  load-more=false
  ...rest
>
  <@section|{ blockName, content, aliases, authors }| modifiers=["content-header"]>
    $ const { primarySection } = content;
    <div class="content-page-header">
      <theme-content-page-breadcrumbs section=primarySection />
      <marko-web-content-name tag="h1" block-name=blockName obj=content />
      <marko-web-content-teaser tag="p" class="page-wrapper__deck" obj=content />
      <if(displayCompany)>
        <theme-content-attribution obj=content elements=["company"] />
      </if>
      <if(authors.length === 1)>
        <theme-author-published-node author=authors[0] content=content lazyload=false display-updated-date=false format="MMMM D, YYYY" />
      </if>
      <else-if(authors.length > 1)>
        <theme-content-attribution obj=content elements=["authors"] />
      </else-if>
      <else-if(displayPublishedDate && authors.length !== 1)>
        <theme-page-dates|{ blockName }|>
          <theme-content-published-node block-name=blockName obj=content display-updated-date=false format="MMMM D, YYYY" />
        </theme-page-dates>
      </else-if>

      <global-sponsored-section-logo alias=primarySection.alias modifiers=["content-page"] class="mt-3" />
    </div>
  </@section>

  <@section|{ aliases, content, authors }| modifiers=["content-body"]>
    $ const { primarySection } = content;
    $ const labels = getAsArray(content, "labels");
    $ const isSponsored = labels.includes("Spoonsored");
    <div class="row">
      <div class="col-lg-8">
        <global-content-contact-details obj=content />
        <div class="content-page-body">
          <theme-page-contents|{ blockName }| attrs={ "data-gallery-id": id }>
            <if(content.embedCode)>
              $ const iframeContent = contentIframe(content);
              <marko-web-content-embed-code block-name=blockName obj=iframeContent />
            </if>
            <else-if(type === "media-gallery")>
              <!-- <marko-web-image-slider images=images /> -->
            </else-if>
            <else-if(displayPrimaryImage)>
              $ let forceDisplay;
              $ if (type === "contact") forceDisplay = "left";
              $ if (type === "video") forceDisplay = "none";
              <theme-primary-image-block
                obj=content.primaryImage
                force-display=forceDisplay
              />
            </else-if>

            <if(content.transcript)>
              <marko-web-link href=`#transcript-${id}` class="btn btn-transcript mt-block mb-2" title="Transcript">
                <marko-web-icon name="file" modifiers=["lg"] /> Transcript
              </marko-web-link>
            </if>

            $ const requiresRegistration = get(content, "userRegistration.isCurrentlyRequired");
            <marko-web-identity-x-access|context| enabled=requiresRegistration>
              <if(!context.canAccess || context.requiresUserInput)>
              <!-- <if(false)> -->
                $ const body = getContentPreview({ body: content.body, selector: "p:nth-of-type(1)" });
                <marko-web-content-body block-name=blockName obj={ body } />

                <div class="content-page-preview-overlay" />
                <theme-content-page-gate
                  profile-confirmation=false
                  can-access=context.canAccess
                  is-logged-in=context.isLoggedIn
                  has-required-access-level=context.hasRequiredAccessLevel
                  requires-access-level=context.requiresAccessLevel
                  requires-user-input=context.requiresUserInput
                  messages=context.messages
                  content-gate-type="default"
                />
              </if>
              <else>
                $ const bodyId = `content-body-${content.id}`;
                $ const lazyloadFirstImage = displayPrimaryImage && content.primaryImage;
                <theme-body-with-injection
                  content=content
                  aliases=aliases
                  block-name=blockName
                  selector=bodyId
                  preventHTMLInjection=!shouldInjectAds
                  lazyload-first-image=lazyloadFirstImage
                  // disable leadderboard ad inject to allow for Teads video injection from GTM
                  desktop-leaderboard-ad-counts=[]
                  mobile-leaderboard-ad-counts=[]
                />
                <if(content.transcript)>
                  $ const transcriptId = `content-transcript-${content.id}`;
                  <div id=`transcript-${id}` class="page-contents__content-transcript">
                    <marko-web-element block-name="page-contents" name="content-transcript-title">
                      <marko-web-icon name="file" modifiers=["lg"] /> Transcript
                    </marko-web-element>
                    <theme-body-with-injection
                      content={ body: content.transcript }
                      aliases=aliases
                      block-name=blockName
                      selector=transcriptId
                      preventHTMLInjection=!shouldInjectAds
                    />
                  </div>
                </if>
                <!-- needs input -->
                <if(input.afterBody)>
                  <${input.afterBody}
                    aliases=aliases
                    block-name=blockName
                    content=content
                  />
                </if>

                $ const sidebars = getAsArray(content, "sidebars").map((sidebar) => sidebar.body);
                <marko-web-content-sidebars block-name=blockName obj={ sidebars } />

                <if(type === "webinar")>
                  $ const isUpcoming = new Date(content.startDate) > Date.now();
                  $ const btnLabel = (isUpcoming) ? "Register for Webinar" : "View Webinar";
                  <marko-web-link
                    class="my-block mb-block btn btn-primary btn-lg"
                    href=content.linkUrl
                    title=btnLabel
                    target="_blank"
                  >
                    ${btnLabel}
                  </marko-web-link>
                </if>

                <if(type === "document" || type === "whitepaper")>
                  <theme-content-download obj=content>
                    <@wufoo user-name=site.get("wufoo.userName") />
                    <@link class="btn btn-primary" />
                  </theme-content-download>
                </if>
                <for|author| of=authors>
                  <if(getAsArray(author, "labels").includes("Contributor"))>
                    <marko-web-content-body obj=author block-name="inline-author-bio" />
                  </if>
                </for>

                <if(displaySocialShare)>
                  <marko-web-social-sharing
                    path=content.siteContext.path
                    providers=["print", "facebook", "linkedin", "twitter", "pinterest"]
                    print-path=`/print/content/${content.id}`
                  />
                </if>
              </else>
            </marko-web-identity-x-access>
          </theme-page-contents>
        </div>
      </div>
      <div class="col-lg-4 page-rail">
        <div class="mb-block">
          <theme-gam-define-display-ad
            name="top-rotation"
            position="content_page"
            aliases=aliases
            modifiers=["max-width-300", "center", "margin-auto-x", "rail"]
            class="mb-0"
          />
        </div>
        <div class="sticky-top">
          <global-recommended-content-block query-params={ excludeContentIds: [content.id] } alias=primarySection.alias aliases=aliases />
        </div>
      </div>
    </div>
  </@section>

  <@section|{ aliases }|>
    $ const adRows = [0, 1, 2];
    <div class="content-card-deck__header">Sponsor Content</div>
    <div class="row native-ad-row">
      <for|rows| of=adRows>
        <div class="col-lg-6">
          <theme-gam-define-display-ad
            name="sponsored-link"
            position="content_page"
            aliases=aliases
            modifiers=["center", "margin-auto-x"]
            show-label=false
          />
        </div>
        <div class="col-lg-6">
          <theme-gam-define-display-ad
            name="sponsored-link"
            position="content_page"
            aliases=aliases
            modifiers=["center", "margin-auto-x"]
            show-label=false
          />
        </div>
      </for>
    </div>
  </@section>
</global-content-wrapper-layout>
